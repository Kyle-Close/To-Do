/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/createTask.js":
/*!***************************!*\
  !*** ./src/createTask.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSelectedList\": () => (/* binding */ getSelectedList),\n/* harmony export */   \"initCreateTaskButton\": () => (/* binding */ initCreateTaskButton),\n/* harmony export */   \"updateTaskSection\": () => (/* binding */ updateTaskSection)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _task__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./task */ \"./src/task.js\");\n/* harmony import */ var _directoriesDOM__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./directoriesDOM */ \"./src/directoriesDOM.js\");\n/* harmony import */ var _deleteTask__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./deleteTask */ \"./src/deleteTask.js\");\n\n\n\n\n\n\n\n\n\nconst modal = document.querySelector(\"#task-modal\");\nconst createTaskButton = document.querySelector(\".create-task button\");\nconst form = document.querySelector(\"#task-modal-content form\");\nconst cancelButton = document.querySelector(\"#cancel\");\n\nfunction initCreateTaskButton() {\n  createTaskButton.addEventListener(\"click\", onCreateTask);\n  cancelButton.addEventListener(\"click\", onCancel);\n  form.addEventListener(\"submit\", onSubmit);\n  // Enable the button if a list is already selected.\n  if ((0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_2__.isListSelected)()) {\n    enableCreateTaskButton();\n  }\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  if (validateInputs()) {\n    addTaskToList(\n      document.querySelector(\"#title\").value,\n      document.querySelector(\"#description\").value,\n      document.querySelector(\"#date\").value,\n      document.querySelector(\"#priority\").value,\n      false\n    );\n    let projectIndex = (0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_2__.getSelectedProjectIndex)();\n    let listIndex = (0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_2__.getSelectedListIndex)();\n    let lastTask =\n      ___WEBPACK_IMPORTED_MODULE_0__.projectList[projectIndex].toDoListArray[listIndex].taskArray.length - 1;\n\n    let taskContainer = displayTask(projectIndex, listIndex, lastTask);\n    clearInputs();\n    initIconEventHandlers(taskContainer);\n    closeModal();\n  }\n}\n\nfunction onCreateTask() {\n  showModal();\n}\n\nfunction onCancel(e) {\n  e.preventDefault();\n  clearInputs();\n  clearErrors();\n  closeModal();\n}\n\nfunction clearInputs() {\n  document.querySelector(\"#title\").value = \"\";\n  document.querySelector(\"#description\").value = \"\";\n  document.querySelector(\"#date\").value = \"\";\n  document.querySelector(\"#priority\").value = \"\";\n}\n\nfunction showModal() {\n  modal.style.display = \"block\";\n  document.body.style.overflow = \"hidden\";\n}\n\nfunction validateInputs() {\n  const titleVal = document.querySelector(\"#title\").value;\n  const priorityVal = document.querySelector(\"#priority\").value;\n  let isValid = true;\n\n  if (titleVal === \"\") {\n    if (!isErrorDisplayed(\"title\")) {\n      displayError(document.querySelector(\".add-task-title-section\"), \"title\");\n    }\n    isValid = false;\n  } else {\n    clearError(document.querySelector(\".titleError\"));\n  }\n\n  if (priorityVal === \"\") {\n    if (!isErrorDisplayed(\"priority\")) {\n      displayError(\n        document.querySelector(\".add-task-priority-section\"),\n        \"priority\"\n      );\n    }\n    isValid = false;\n  } else {\n    clearError(document.querySelector(\".priorityError\"));\n  }\n\n  return isValid;\n}\n\nfunction closeModal() {\n  modal.style.display = \"none\";\n  document.body.style.overflow = \"auto\";\n}\n\nfunction displayError(container, type) {\n  let errorNode = document.createElement(\"p\");\n  if (type === \"title\") {\n    errorNode.className = \"titleError\";\n  }\n  if (type === \"priority\") {\n    errorNode.className = \"priorityError\";\n  }\n  errorNode.textContent = \"This is a mandatory field *\";\n  errorNode.style.color = \"red\";\n  errorNode.style.fontSize = \"14px\";\n  container.appendChild(errorNode);\n}\n\nfunction isErrorDisplayed(type) {\n  let isDisplayed = false;\n  if (type === \"title\") {\n    if (document.querySelector(\".titleError\") !== null) {\n      isDisplayed = true;\n    }\n  }\n  if (type === \"priority\") {\n    if (document.querySelector(\".priorityError\") !== null) {\n      isDisplayed = true;\n    }\n  }\n\n  return isDisplayed;\n}\n\nfunction addTaskToList(\n  taskName,\n  taskDescription,\n  taskDueDate,\n  priority,\n  isCompleted\n) {\n  ___WEBPACK_IMPORTED_MODULE_0__.projectList[(0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_2__.getSelectedProjectIndex)()].toDoListArray[\n    (0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_2__.getSelectedListIndex)()\n  ].taskArray.push(\n    new _task__WEBPACK_IMPORTED_MODULE_1__.Task(taskName, taskDescription, taskDueDate, priority, isCompleted)\n  );\n}\n\nfunction displayTask(projectIndex, listIndex, taskIndex) {\n  // Add Priority to priority list\n  const prioList = document.querySelector(\".priority-list\");\n  let priority =\n    ___WEBPACK_IMPORTED_MODULE_0__.projectList[projectIndex].toDoListArray[listIndex].taskArray[taskIndex]\n      .priority;\n  let li = createPriorityDom(priority);\n  prioList.appendChild(li);\n  // Add Task Container to grid\n  const grid = document.querySelector(\".task-grid\");\n  const currentTaskArray =\n    ___WEBPACK_IMPORTED_MODULE_0__.projectList[projectIndex].toDoListArray[listIndex].taskArray[taskIndex];\n\n  let title = currentTaskArray.taskName;\n  let date = currentTaskArray.taskDueDate;\n\n  let taskContainer = createTaskDom(title, date);\n  grid.appendChild(taskContainer);\n  return taskContainer;\n}\n\nfunction createTaskDom(title, date) {\n  let uniqueId = Date.now().toString();\n  let task = document.createElement(\"div\");\n  task.className = \"task\";\n  task.id = uniqueId;\n  let taskTop = createTaskTop(date);\n  let taskBottom = createTaskBottom(title);\n  task.appendChild(taskTop);\n  task.appendChild(taskBottom);\n  return task;\n}\n\nfunction createTaskTop(date) {\n  let taskTop = document.createElement(\"div\");\n  taskTop.className = \"task-top\";\n  let taskDate = document.createElement(\"p\");\n  if (date === \"\") {\n    taskDate.textContent = \" \";\n  }\n  taskDate.textContent = date;\n  taskTop.appendChild(taskDate);\n  return taskTop;\n}\n\nfunction createTaskBottom(title) {\n  let taskBottom = document.createElement(\"div\");\n  taskBottom.className = \"task-bottom\";\n  let checkBox = createCheckBox();\n  let taskTitle = document.createElement(\"div\");\n  taskTitle.className = \"task-title\";\n  taskTitle.textContent = title;\n  let iconsSection = createIcons();\n  taskBottom.appendChild(checkBox);\n  taskBottom.appendChild(taskTitle);\n  taskBottom.appendChild(iconsSection);\n  return taskBottom;\n}\n\n// Priority node is not being created before we try to delete it\n\nfunction createCheckBox() {\n  let uniqueId = Date.now().toString();\n  let checkBox = document.createElement(\"div\");\n  checkBox.className = \"checkbox\";\n  // Child\n  let round = document.createElement(\"div\");\n  round.className = \"round\";\n  // Input\n  let input = document.createElement(\"input\");\n  input.type = \"checkbox\";\n  input.id = `checkbox-${uniqueId}`;\n  input.checked = true;\n  // Label\n  let label = document.createElement(\"label\");\n  label.htmlFor = `checkbox-${uniqueId}`;\n  round.appendChild(input);\n  round.appendChild(label);\n\n  checkBox.appendChild(round);\n  return checkBox;\n}\n\nfunction createIcons() {\n  let iconsSection = document.createElement(\"div\");\n  iconsSection.className = \"interactable-icons\";\n  let infoIcon = createImage(\"35\", \"../img/info.png\", \"Information icon\");\n  let editIcon = createImage(\"35\", \"../img/edit.png\", \"Edit icon\");\n  let trashIcon = createImage(\"35\", \"../img/trash.png\", \"Trash icon\");\n  trashIcon.className = \"trash-icon\";\n  iconsSection.appendChild(infoIcon);\n  iconsSection.appendChild(editIcon);\n  iconsSection.appendChild(trashIcon);\n  return iconsSection;\n}\n\nfunction createImage(width, src, alt) {\n  let img = document.createElement(\"img\");\n  img.src = src;\n  img.width = width;\n  img.alt = alt;\n  return img;\n}\n\nfunction clearError(errorNode) {\n  if (errorNode !== null) {\n    errorNode.remove();\n  }\n}\n\nfunction clearErrors() {\n  const titleError = document.querySelector(\".titleError\");\n  const priorityError = document.querySelector(\".priorityError\");\n  const errorList = [titleError, priorityError];\n\n  errorList.forEach((error) => {\n    clearError(error);\n  });\n}\n\nfunction enableCreateTaskButton() {\n  const button = document.querySelector(\".create-task button\");\n  button.disabled = false;\n}\n\nfunction createPriorityDom(priority) {\n  let li = document.createElement(\"li\");\n  li.textContent = priority;\n  return li;\n}\n\nfunction initIconEventHandlers(taskContainer) {\n  const trashIcon = taskContainer.querySelector(\".trash-icon\");\n  trashIcon.addEventListener(\"click\", function () {\n    (0,_deleteTask__WEBPACK_IMPORTED_MODULE_3__.deleteTaskFromToDoList)(\n      getSelectedList(),\n      getDeletedTaskIndex(taskContainer)\n    );\n    (0,_deleteTask__WEBPACK_IMPORTED_MODULE_3__.deleteTaskDom)(taskContainer);\n  });\n}\n\nfunction getSelectedList() {\n  let projIndex = (0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_2__.getSelectedProjectIndex)();\n  let listIndex = (0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_2__.getSelectedListIndex)();\n  return ___WEBPACK_IMPORTED_MODULE_0__.projectList[projIndex].toDoListArray[listIndex];\n}\n\nfunction getDeletedTaskIndex(taskContainer) {\n  /* Takes in the task container. Each task container has a unique id.\n   We can compare the passed in container id with all the tasks until we find a match */\n  const taskList = [...document.querySelectorAll(\".task-grid > div\")];\n  let count = 0;\n  let index = 0;\n  taskList.forEach((task) => {\n    if (task.id === taskContainer.id) {\n      index = count;\n    }\n    count++;\n  });\n  return index;\n}\n\nfunction updateTaskSection() {\n  // Display the currently selected lists' tasks.\n  const currentList = getSelectedList();\n\n  (0,_deleteTask__WEBPACK_IMPORTED_MODULE_3__.deleteAllTasksDom)();\n  if (!isTaskListEmpty(currentList)) {\n    displayCurrentTasks(currentList);\n  }\n}\n\nfunction displayCurrentTasks(currentList) {\n  const grid = document.querySelector(\".task-grid\");\n  currentList.taskArray.forEach((task) => {\n    let taskContainer = createTaskDom(task.taskName, task.taskDueDate);\n    grid.appendChild(taskContainer);\n  });\n}\n\nfunction isTaskListEmpty(currentList) {\n  let isEmpty = true;\n  if (currentList.taskArray.length > 0) {\n    isEmpty = false;\n  }\n  return isEmpty;\n}\n\n\n//# sourceURL=webpack://to-do/./src/createTask.js?");

/***/ }),

/***/ "./src/deleteTask.js":
/*!***************************!*\
  !*** ./src/deleteTask.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteAllTasksDom\": () => (/* binding */ deleteAllTasksDom),\n/* harmony export */   \"deleteAllTasksFromToDoList\": () => (/* binding */ deleteAllTasksFromToDoList),\n/* harmony export */   \"deleteTaskDom\": () => (/* binding */ deleteTaskDom),\n/* harmony export */   \"deleteTaskFromToDoList\": () => (/* binding */ deleteTaskFromToDoList),\n/* harmony export */   \"initDeleteAllTasksButton\": () => (/* binding */ initDeleteAllTasksButton)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _directoriesDOM__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directoriesDOM */ \"./src/directoriesDOM.js\");\n/* harmony import */ var _createTask__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createTask */ \"./src/createTask.js\");\n\n\n\n\nfunction initDeleteAllTasksButton() {\n  const deleteButton = document.querySelector(\".delete-all-tasks button\");\n  deleteButton.addEventListener(\"click\", function () {\n    deleteAllTasksFromToDoList((0,_createTask__WEBPACK_IMPORTED_MODULE_2__.getSelectedList)());\n    deleteAllTasksDom();\n  });\n}\n\nfunction deleteTaskDom(taskToDelete) {\n  // Deletes single task with the priority on the dom\n  deletePriorityDom(getTaskPriorityDomIndex(taskToDelete));\n  taskToDelete.remove();\n}\n\n// Problem is somewhere here. Trying to delete a task when none exist. When switching lists\nfunction deletePriorityDom(taskGridIndex) {\n  let priorityList = [...document.querySelectorAll(\".priority-list li\")];\n  priorityList[taskGridIndex].remove();\n}\n\nfunction getTaskPriorityDomIndex(taskToDelete) {\n  const tasks = document.querySelectorAll(\".task-grid > div\");\n  let count = 0;\n  let index = 0;\n  tasks.forEach((task) => {\n    if (task === taskToDelete) {\n      index = count;\n    }\n    count++;\n  });\n  return index;\n}\n\nfunction deleteTaskFromToDoList(currentList, taskIndex) {\n  currentList.taskArray.splice(taskIndex, 1);\n}\n\nfunction deleteAllTasksFromToDoList(currentList) {\n  currentList.taskArray.length = 0;\n  console.dir(___WEBPACK_IMPORTED_MODULE_0__.projectList);\n}\n\nfunction deleteAllTasksDom() {\n  const taskGrid = [...document.querySelectorAll(\".task-grid > div\")];\n  taskGrid.forEach((task) => {\n    deleteTaskDom(task);\n  });\n}\n\n\n//# sourceURL=webpack://to-do/./src/deleteTask.js?");

/***/ }),

/***/ "./src/directoriesDOM.js":
/*!*******************************!*\
  !*** ./src/directoriesDOM.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addNewProjectOrListDOM\": () => (/* binding */ addNewProjectOrListDOM),\n/* harmony export */   \"getSelectedListIndex\": () => (/* binding */ getSelectedListIndex),\n/* harmony export */   \"getSelectedProjectIndex\": () => (/* binding */ getSelectedProjectIndex),\n/* harmony export */   \"initDirectoryButtonEventHandlers\": () => (/* binding */ initDirectoryButtonEventHandlers),\n/* harmony export */   \"isListSelected\": () => (/* binding */ isListSelected),\n/* harmony export */   \"updateListSectionProjectTitle\": () => (/* binding */ updateListSectionProjectTitle)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _createTask__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createTask */ \"./src/createTask.js\");\n\n\n\nconst projectsListContainer = document.querySelector(\n  \".directories-list-projects\"\n);\nconst listsContainer = document.querySelector(\".directories-list-lists\");\nconst projectTitleListSection = document.querySelector(\".current-project-name\");\nconst directoryButtons = document.querySelectorAll(\".project-list-buttons\");\n\nlet lastSelectedProject;\nlet lastSelectedList;\n\nfunction addNewProjectOrListDOM(name, isProject) {\n  let li = document.createElement(\"li\");\n\n  if (isProject) {\n    let projectButton = createProjectButton(name);\n    let deleteButton = createDeleteButton();\n    li.appendChild(projectButton);\n    li.appendChild(deleteButton);\n    if (___WEBPACK_IMPORTED_MODULE_0__.projectList.length === 0) {\n      projectButton.setAttribute(\"selected\", true);\n      lastSelectedProject = projectButton;\n      updateProjectTitle(name);\n    }\n    projectsListContainer.appendChild(li);\n  } else {\n    let listButton = createListButton(name);\n    let deleteButton = createDeleteButton();\n    li.appendChild(listButton);\n    li.appendChild(deleteButton);\n    if (___WEBPACK_IMPORTED_MODULE_0__.projectList[getSelectedProjectIndex()].toDoListArray.length === 0) {\n      listButton.setAttribute(\"selected\", true);\n      lastSelectedList = listButton;\n      updateListTitle(name);\n    }\n    listsContainer.appendChild(li);\n    // Check if create task button is disabled\n    if (document.querySelector(\".create-task button\").disabled === true) {\n      // Check if list is selected\n      if (isListSelected()) {\n        // Enable the button\n        document.querySelector(\".create-task button\").disabled = false;\n      }\n    }\n  }\n}\n\nfunction updateListSectionProjectTitle(projectName) {\n  projectTitleListSection.textContent = projectName;\n}\n\nfunction initDirectoryButtonEventHandlers() {\n  [...directoryButtons].forEach((button) => {\n    button.addEventListener(\"click\", directoryButtonEvent);\n  });\n}\n\nfunction createProjectButton(name) {\n  let button = document.createElement(\"button\");\n  button.textContent = name;\n  button.className = \"project-list-buttons\";\n  button.classList.add(\"project-button\");\n  button.addEventListener(\"click\", directoryButtonEvent);\n  return button;\n}\n\nfunction createListButton(name) {\n  let button = document.createElement(\"button\");\n  button.textContent = name;\n  button.className = \"project-list-buttons\";\n  button.classList.add(\"list-button\");\n  button.addEventListener(\"click\", directoryButtonEvent);\n  return button;\n}\n\nfunction createDeleteButton() {\n  let button = document.createElement(\"button\");\n  let image = document.createElement(\"img\");\n\n  image.src = \"../img/trash.png\";\n  image.width = \"25\";\n  button.appendChild(image);\n  button.addEventListener(\"click\", deleteListItem);\n  return button;\n}\n\nfunction directoryButtonEvent(e) {\n  e.target.setAttribute(\"selected\", \"true\");\n  // Determine if project or list\n  let listType = e.target.classList[1];\n\n  if (listType === \"project-button\") {\n    if (lastSelectedProject && lastSelectedProject !== e.target) {\n      lastSelectedProject.removeAttribute(\"selected\");\n      clearAllLists();\n      displayCurrentProjectLists();\n      setSelectedOnFirstList();\n    }\n    lastSelectedProject = e.target;\n    updateProjectTitle(e.target.textContent);\n    // Check if this project has any lists. If not, we need to disable \"create task\" button\n    let currentProjectToDoListLength =\n      ___WEBPACK_IMPORTED_MODULE_0__.projectList[getSelectedProjectIndex()].toDoListArray.length;\n    if (currentProjectToDoListLength === 0) {\n      document.querySelector(\".create-task button\").disabled = true;\n    }\n  } else if (listType === \"list-button\") {\n    if (lastSelectedList && lastSelectedList !== e.target) {\n      lastSelectedList.removeAttribute(\"selected\");\n    }\n    lastSelectedList = e.target;\n    updateListTitle(e.target.textContent);\n    (0,_createTask__WEBPACK_IMPORTED_MODULE_1__.updateTaskSection)();\n  }\n}\n\nfunction getSelectedProjectIndex() {\n  let index = 0;\n  let count = 0;\n  let projectList = document.querySelectorAll(\".directories-list-projects li\");\n  [...projectList].forEach((li) => {\n    if (li.children[0].getAttribute(\"selected\")) {\n      index = count;\n    }\n    count++;\n  });\n  return index;\n}\n\nfunction getSelectedListIndex() {\n  let index = 0;\n  let count = 0;\n  let list = document.querySelectorAll(\".directories-list-lists li\");\n  [...list].forEach((li) => {\n    if (li.children[0].getAttribute(\"selected\")) {\n      index = count;\n    }\n    count++;\n  });\n  return index;\n}\n\nfunction getDeletedProjectIndex(liElement) {\n  const nodeItemText = liElement.firstChild.textContent;\n  let count = 0;\n  let index;\n  ___WEBPACK_IMPORTED_MODULE_0__.projectList.forEach((project) => {\n    if (project.projectName === nodeItemText) {\n      index = count;\n    }\n    count++;\n  });\n  return index;\n}\n\nfunction getDeletedListIndex(project, liElement) {\n  const nodeItemText = liElement.firstChild.textContent;\n  let count = 0;\n  let index;\n  project.toDoListArray.forEach((list) => {\n    if (list.listName === nodeItemText) {\n      index = count;\n    }\n    count++;\n  });\n  return index;\n}\n\nfunction updateProjectTitle(title) {\n  const domTitle = document.querySelector(\".project-list-titles h1\");\n  domTitle.textContent = title;\n  const listSectionTitle = document.querySelector(\".current-project-name\");\n  listSectionTitle.textContent = title;\n}\n\nfunction updateListTitle(title) {\n  const domTitle = document.querySelector(\".project-list-titles h3\");\n  domTitle.textContent = title;\n}\n\nfunction clearAllLists() {\n  const lists = document.querySelectorAll(\".directories-list-lists li\");\n  [...lists].forEach((list) => {\n    list.remove();\n  });\n}\n\nfunction displayCurrentProjectLists() {\n  let index = getSelectedProjectIndex();\n  let currentProject = ___WEBPACK_IMPORTED_MODULE_0__.projectList[index];\n  currentProject.toDoListArray.forEach((list) => {\n    addNewProjectOrListDOM(list.listName, false, \"list\");\n  });\n}\n\nfunction setSelectedOnFirstList() {\n  const list = [...document.querySelectorAll(\".directories-list-lists li\")];\n  if (list.length !== 0) {\n    list[0].firstChild.setAttribute(\"selected\", true);\n    lastSelectedList = list[0].firstChild;\n  }\n}\n\nfunction deleteListItem(event) {\n  const liElement = event.target.parentNode.closest(\"li\");\n  let isProject =\n    liElement.parentNode.classList[1] === \"directories-list-projects\"\n      ? true\n      : false;\n\n  if (isProject) {\n    let index = getDeletedProjectIndex(liElement);\n    // Remove Project From DOM\n    liElement.remove(liElement);\n    // Remove Project From Global List\n    ___WEBPACK_IMPORTED_MODULE_0__.projectList.splice(index, 1);\n\n    if (\n      (wasDeletedItemSelected(liElement.firstChild) || index === 0) &&\n      ___WEBPACK_IMPORTED_MODULE_0__.projectList.length > 0\n    ) {\n      selectFirstProject();\n    }\n    clearAllLists();\n    // If Current project has a non empty list of toDoListArray, then display that list\n    if (___WEBPACK_IMPORTED_MODULE_0__.projectList[getSelectedProjectIndex()].toDoListArray.length > 0) {\n      displayCurrentProjectLists();\n      selectFirstList();\n    }\n  } else {\n    const projectListIndex = getSelectedProjectIndex();\n    const listListIndex = getDeletedListIndex(\n      ___WEBPACK_IMPORTED_MODULE_0__.projectList[projectListIndex],\n      liElement\n    );\n    removeListFromDOM(liElement);\n    ___WEBPACK_IMPORTED_MODULE_0__.projectList[projectListIndex].toDoListArray.splice(listListIndex, 1);\n    // Only select the first list if the deleted list item was the one selected\n    // OR if the deleted list was the first one\n    if (wasDeletedItemSelected(liElement.firstChild) || listListIndex === 0) {\n      selectFirstList();\n    }\n  }\n  let currentProjectToDoListLength =\n    ___WEBPACK_IMPORTED_MODULE_0__.projectList[getSelectedProjectIndex()].toDoListArray.length;\n  if (currentProjectToDoListLength < 1) {\n    document.querySelector(\".create-task button\").disabled = true;\n  }\n}\n\nfunction selectFirstProject() {\n  const projects = document.querySelectorAll(\".directories-list-projects li\");\n  if (projects) {\n    projects[0].firstChild.setAttribute(\"selected\", true);\n    lastSelectedProject = projects[0].firstChild;\n    updateProjectTitle(lastSelectedProject.textContent);\n  }\n}\n\nfunction selectFirstList() {\n  const lists = document.querySelectorAll(\".directories-list-lists li\");\n  if (lists.length !== 0) {\n    lists[0].firstChild.setAttribute(\"selected\", true);\n    lastSelectedList = lists[0].firstChild;\n    updateListTitle(lastSelectedList.textContent);\n  }\n}\n\nfunction removeListFromDOM(listItem) {\n  listItem.remove();\n}\n\nfunction wasDeletedItemSelected(itemButton) {\n  let result = false;\n  if (itemButton.getAttribute(\"selected\")) {\n    result = true;\n  }\n  return result;\n}\n\nfunction isListSelected() {\n  let isSelected = false;\n  const lists = document.querySelectorAll(\".directories-list-lists li\");\n  if (lists.length > 0) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n\n//# sourceURL=webpack://to-do/./src/directoriesDOM.js?");

/***/ }),

/***/ "./src/formHandlerDOM.js":
/*!*******************************!*\
  !*** ./src/formHandlerDOM.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initFormsEventHandler\": () => (/* binding */ initFormsEventHandler)\n/* harmony export */ });\n/* harmony import */ var _directoriesDOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directoriesDOM */ \"./src/directoriesDOM.js\");\n/* harmony import */ var _project__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./project */ \"./src/project.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _toDoList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toDoList */ \"./src/toDoList.js\");\n\n\n\n\n\n\nfunction initFormsEventHandler() {\n  [...document.querySelectorAll(\".directories-forms\")].forEach((form) => {\n    form.addEventListener(\"submit\", submitHandler);\n  });\n}\n\nfunction submitHandler(e) {\n  e.preventDefault();\n  // Get form that was used. Project or List\n  let isProject = e.target.classList[0] === \"project-form\" ? true : false;\n\n  if (isProject) {\n    let projectName = document.querySelector(\"#project-name\").value;\n    if (validateInput(true, projectName)) {\n      // Add project to the DOM\n      (0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_0__.addNewProjectOrListDOM)(projectName, true);\n      // Add project to the global projectList\n      ___WEBPACK_IMPORTED_MODULE_2__.projectList.push(new _project__WEBPACK_IMPORTED_MODULE_1__.Project(projectName));\n      // Clear text from input box\n      document.querySelector(\"#project-name\").value = \"\";\n    }\n  } else {\n    let listName = document.querySelector(\"#list-name\").value;\n    if (validateInput(false, listName)) {\n      // Add list to the DOM\n      (0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_0__.addNewProjectOrListDOM)(listName, false);\n      // Add list to the current projects toDoListArray\n      ___WEBPACK_IMPORTED_MODULE_2__.projectList[(0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_0__.getSelectedProjectIndex)()].toDoListArray.push(\n        new _toDoList__WEBPACK_IMPORTED_MODULE_3__.ToDoList(listName)\n      );\n    }\n    // Clear text from input box\n    document.querySelector(\"#list-name\").value = \"\";\n  }\n}\n\nfunction validateInput(isProject, inputValue) {\n  let isValid = false;\n  if (isProject) {\n    if (isProjectNameUnique(inputValue) && !isEmpty(inputValue)) {\n      isValid = true;\n    }\n  } else {\n    if (isListNameUnique(inputValue) && !isEmpty(inputValue)) {\n      isValid = true;\n    }\n  }\n  return isValid;\n}\n\nfunction isEmpty(value) {\n  let isEmpty = false;\n  if (value === \"\") {\n    isEmpty = true;\n  }\n  if (isEmpty) alert(\"Please enter a value.\");\n  return isEmpty;\n}\n\nfunction isProjectNameUnique(name) {\n  const projects = document.querySelectorAll(\".directories-list-projects li\");\n  let isUnique = true;\n  [...projects].forEach((project) => {\n    if (project.textContent === name) {\n      isUnique = false;\n    }\n  });\n  if (!isUnique) {\n    alert(`${name} is not unique.`);\n  }\n  return isUnique;\n}\n\nfunction isListNameUnique(name) {\n  let isUnique = true;\n  // Get currently selected project array index\n  const projectArrayIndex = (0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_0__.getSelectedProjectIndex)();\n  // Loop through each toDoList item and check if names match\n  ___WEBPACK_IMPORTED_MODULE_2__.projectList[projectArrayIndex].toDoListArray.forEach((list) => {\n    if (list.listName === name) {\n      isUnique = false;\n    }\n  });\n  if (!isUnique) {\n    alert(`${name} is not unique.`);\n  }\n  return isUnique;\n}\n\n\n//# sourceURL=webpack://to-do/./src/formHandlerDOM.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"activeList\": () => (/* binding */ activeList),\n/* harmony export */   \"activeProject\": () => (/* binding */ activeProject),\n/* harmony export */   \"projectList\": () => (/* binding */ projectList)\n/* harmony export */ });\n/* harmony import */ var _formHandlerDOM_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formHandlerDOM.js */ \"./src/formHandlerDOM.js\");\n/* harmony import */ var _directoriesDOM__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directoriesDOM */ \"./src/directoriesDOM.js\");\n/* harmony import */ var _createTask_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createTask.js */ \"./src/createTask.js\");\n/* harmony import */ var _deleteTask_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./deleteTask.js */ \"./src/deleteTask.js\");\n\n\n\n\n\nlet projectList = new Array();\nlet activeProject;\nlet activeList;\n\n(0,_formHandlerDOM_js__WEBPACK_IMPORTED_MODULE_0__.initFormsEventHandler)();\n(0,_directoriesDOM__WEBPACK_IMPORTED_MODULE_1__.initDirectoryButtonEventHandlers)();\n(0,_createTask_js__WEBPACK_IMPORTED_MODULE_2__.initCreateTaskButton)();\n(0,_deleteTask_js__WEBPACK_IMPORTED_MODULE_3__.initDeleteAllTasksButton)();\n\n\n//# sourceURL=webpack://to-do/./src/index.js?");

/***/ }),

/***/ "./src/project.js":
/*!************************!*\
  !*** ./src/project.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Project\": () => (/* binding */ Project)\n/* harmony export */ });\nclass Project {\n  constructor(projectName) {\n    this.projectName = projectName;\n    this.toDoListArray = new Array();\n  }\n\n  addList(list) {\n    this.toDoListArray.push(list);\n  }\n\n  displayLists() {\n    this.toDoListArray.forEach((list) => {\n      list.displayTasks();\n    });\n  }\n}\n\n\n//# sourceURL=webpack://to-do/./src/project.js?");

/***/ }),

/***/ "./src/task.js":
/*!*********************!*\
  !*** ./src/task.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Task\": () => (/* binding */ Task)\n/* harmony export */ });\nclass Task {\n  constructor(taskName, taskDescription, taskDueDate, priority, isCompleted) {\n    this.taskName = taskName;\n    this.taskDescription = taskDescription;\n    this.taskDueDate = taskDueDate;\n    this.priority = priority;\n    this.isCompleted = isCompleted;\n  }\n  info() {\n    console.log(`Task Name: ${this.taskName}`);\n    console.log(`Task Description: ${this.taskDescription}`);\n    console.log(`Task Due Date: ${this.taskDueDate}`);\n    console.log(`Task Priority: ${this.priority}`);\n    console.log(`Task Completed: ${this.isCompleted}`);\n    console.log(\"---------------------------------\");\n  }\n}\n\n\n//# sourceURL=webpack://to-do/./src/task.js?");

/***/ }),

/***/ "./src/toDoList.js":
/*!*************************!*\
  !*** ./src/toDoList.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ToDoList\": () => (/* binding */ ToDoList)\n/* harmony export */ });\nclass ToDoList {\n  constructor(listName) {\n    this.listName = listName;\n    this.taskArray = new Array();\n  }\n\n  addTask(task) {\n    this.taskArray.push(task);\n  }\n\n  displayTasks() {\n    this.taskArray.forEach((task) => {\n      task.info();\n    });\n  }\n}\n\n\n//# sourceURL=webpack://to-do/./src/toDoList.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;